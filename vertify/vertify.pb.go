// Code generated by protoc-gen-go. DO NOT EDIT.
// source: vertify.proto

/*
Package vertify is a generated protocol buffer package.

It is generated from these files:
	vertify.proto

It has these top-level messages:
	VertifyRequest
	VertifyResponse
*/
package vertify

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type VertifyRequest struct {
	Key string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
}

func (m *VertifyRequest) Reset()                    { *m = VertifyRequest{} }
func (m *VertifyRequest) String() string            { return proto.CompactTextString(m) }
func (*VertifyRequest) ProtoMessage()               {}
func (*VertifyRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *VertifyRequest) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

type VertifyResponse struct {
	Checked bool `protobuf:"varint,1,opt,name=checked" json:"checked,omitempty"`
}

func (m *VertifyResponse) Reset()                    { *m = VertifyResponse{} }
func (m *VertifyResponse) String() string            { return proto.CompactTextString(m) }
func (*VertifyResponse) ProtoMessage()               {}
func (*VertifyResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *VertifyResponse) GetChecked() bool {
	if m != nil {
		return m.Checked
	}
	return false
}

func init() {
	proto.RegisterType((*VertifyRequest)(nil), "vertify.VertifyRequest")
	proto.RegisterType((*VertifyResponse)(nil), "vertify.VertifyResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Vertify service

type VertifyClient interface {
	CheckKey(ctx context.Context, in *VertifyRequest, opts ...grpc.CallOption) (*VertifyResponse, error)
}

type vertifyClient struct {
	cc *grpc.ClientConn
}

func NewVertifyClient(cc *grpc.ClientConn) VertifyClient {
	return &vertifyClient{cc}
}

func (c *vertifyClient) CheckKey(ctx context.Context, in *VertifyRequest, opts ...grpc.CallOption) (*VertifyResponse, error) {
	out := new(VertifyResponse)
	err := grpc.Invoke(ctx, "/vertify.Vertify/CheckKey", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Vertify service

type VertifyServer interface {
	CheckKey(context.Context, *VertifyRequest) (*VertifyResponse, error)
}

func RegisterVertifyServer(s *grpc.Server, srv VertifyServer) {
	s.RegisterService(&_Vertify_serviceDesc, srv)
}

func _Vertify_CheckKey_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VertifyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VertifyServer).CheckKey(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/vertify.Vertify/CheckKey",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VertifyServer).CheckKey(ctx, req.(*VertifyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Vertify_serviceDesc = grpc.ServiceDesc{
	ServiceName: "vertify.Vertify",
	HandlerType: (*VertifyServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CheckKey",
			Handler:    _Vertify_CheckKey_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "vertify.proto",
}

func init() { proto.RegisterFile("vertify.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 136 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2d, 0x4b, 0x2d, 0x2a,
	0xc9, 0x4c, 0xab, 0xd4, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x87, 0x72, 0x95, 0x94, 0xb8,
	0xf8, 0xc2, 0x20, 0xcc, 0xa0, 0xd4, 0xc2, 0xd2, 0xd4, 0xe2, 0x12, 0x21, 0x01, 0x2e, 0xe6, 0xec,
	0xd4, 0x4a, 0x09, 0x46, 0x05, 0x46, 0x0d, 0xce, 0x20, 0x10, 0x53, 0x49, 0x9b, 0x8b, 0x1f, 0xae,
	0xa6, 0xb8, 0x20, 0x3f, 0xaf, 0x38, 0x55, 0x48, 0x82, 0x8b, 0x3d, 0x39, 0x23, 0x35, 0x39, 0x3b,
	0x35, 0x05, 0xac, 0x90, 0x23, 0x08, 0xc6, 0x35, 0xf2, 0xe0, 0x62, 0x87, 0x2a, 0x16, 0xb2, 0xe5,
	0xe2, 0x70, 0x06, 0x89, 0x7a, 0xa7, 0x56, 0x0a, 0x89, 0xeb, 0xc1, 0x1c, 0x80, 0x6a, 0x9d, 0x94,
	0x04, 0xa6, 0x04, 0xc4, 0x8e, 0x24, 0x36, 0xb0, 0x53, 0x8d, 0x01, 0x01, 0x00, 0x00, 0xff, 0xff,
	0x80, 0xe5, 0xf7, 0xa6, 0xbb, 0x00, 0x00, 0x00,
}
